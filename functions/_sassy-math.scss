// SASSY MATH
// https://github.com/Team-Sass/Sassy-math

// I only included Sassy-math functions that are needed for the light system to work

//////////////////////////////
// Variables
//////////////////////////////
$pi: 3.1415926535897932384626433832795028841971693993751;
$iter: 50;

//////////////////////////////
// Exponent
//////////////////////////////
@function exponent($base, $exponent) {
  // reset value
  $value: $base;
  // positive intergers get multiplied
  @if $exponent > 1 {
    @for $i from 2 through $exponent {
      $value: $value * $base; } }
  // negitive intergers get divided. A number divided by itself is 1
  @if $exponent < 1 {
    @for $i from 0 through -$exponent {
      $value: $value / $base; } }
  // return the last value written
  @return $value;
}

//////////////////////////////
// Factorial
//////////////////////////////
@function factorial($number) {
  // reset value
  $value: 1;
  // positive intergers get multiplied
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

//////////////////////////////
// Polynomial Approximation
//////////////////////////////
// Maclaurin series can be used to estimate Sine and Consine
@function maclaurin($start, $key, $number) {
  $value: $start;
  $add: 0;

  @for $i from 1 through $iter {
    @if $add == 0 {
      $value: $value - ( exponent($number, $key) / factorial($key) );
      $add: 1;
    }
    @else {
      $value: $value + ( exponent($number, $key) / factorial($key) );
      $add: 0;
    }

    $key: $key + 2;
  }

  @return $value;
}

//////////////////////////////
// Basic Trig Functions
//////////////////////////////
// Bundled in Compass: http://compass-style.org/reference/compass/helpers/trig/
// References for implementing using MacLaurin series below:

@function sin($number, $unit: 'deg') {
 @if $unit == 'deg' {
   $number: deg-to-rad($number);
 }
 @return maclaurin($number, 3, $number);
}

@function cos($number, $unit: 'deg') {
 @if $unit == 'deg' {
   $number: deg-to-rad($number);
 }
 @return maclaurin(1, 2, $number);
}

//////////////////////////////
// Degree/Radian Conversion
//////////////////////////////
@function deg-to-rad($number) {
  @return $number * $pi / 180deg;
}

@function rad-to-deg($number) {
  @return $number * 180deg / $pi;
}
